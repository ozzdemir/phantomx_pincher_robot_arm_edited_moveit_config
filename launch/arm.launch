<launch>

  <arg name="simulation" default="false"/>

  <!--Here we broadcast our final coordinate system for the gripper, since gripper_finger_base_link from the arbotix package is
      not centered at the gripper for our PhantomX Pincher arm. We choose the name gripper_link since the turtlebot_arm package depends on it. -->
  <!--node pkg="tf" type="static_transform_publisher" name="gripper_base_link" args="0 0 -0.01 0.5 -0.5 -0.5 0.5 base_link right_gripper_link 50" /-->
  
  <node pkg="tf" type="static_transform_publisher" name="base_link_2_world" args="1 0 0 0 0 0 1 /world /base_link 0" />
  
  <!-- Unfortunately, we need a virtual helper joint that is part of the URDF -->
  <!--<node name="fake_joint_pub" pkg="phantomx_pincher_robot_arm_edited_moveit_config" type="fake_joint_pub.py" output="screen"/>-->

  <!-- Now load robot model -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find phantomx_pincher_robot_arm_edited)/urdf/phantomx_pincher_robot_arm_edited.urdf'"/>
  <node name="robot_state_pub" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Start Arbotix driver -->
  <node name="arbotix" pkg="arbotix_python" type="arbotix_driver" output="screen">
    <rosparam file="$(find phantomx_pincher_robot_arm_edited)/config/phantomx_pincher_robot_arm_edited.yaml" command="load"/>
    <param name="sim" value="$(arg simulation)"/>
  </node>

<!--  <node name="arm_controller" pkg="arbotix_controllers" type="arm_controller" output="screen">
    <rosparam file="$(find phantomx_pincher_robot_arm_edited)/config/phantomx_pincher_robot_arm_edited.yaml" command="load" />
  </node>-->

  <!-- Start gripper controller -->
  <!--<node name="gripper_controller" pkg="arbotix_controllers" type="gripper_controller" output="screen">
    <rosparam file="$(find phantomx_pincher_robot_arm_edited)/config/phantomx_pincher_robot_arm_edited_gripper.yaml" command="load" />
  </node>-->
</launch>
